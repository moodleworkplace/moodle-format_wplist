{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle Workplace https://moodle.com/workplace based on Moodle\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n//\n// Moodle Workplaceâ„¢ Code is the collection of software scripts\n// (plugins and modifications, and any derivations thereof) that are\n// exclusively owned and licensed by Moodle under the terms of this\n// proprietary Moodle Workplace License (\"MWL\") alongside Moodle's open\n// software package offering which itself is freely downloadable at\n// \"download.moodle.org\" and which is provided by Moodle under a single\n// GNU General Public License version 3.0, dated 29 June 2007 (\"GPL\").\n// MWL is strictly controlled by Moodle Pty Ltd and its certified\n// premium partners. Wherever conflicting terms exist, the terms of the\n// MWL are binding and shall prevail.\n\n/**\n * Javascript for course format workplace list.\n *\n * @module     format_wplist/main\n * @copyright  2019 Moodle Pty Ltd <support@moodle.com>\n * @author     2019 <bas@moodle.com>\n * @license    Moodle Workplace License, distribution is restricted, contact support@moodle.com\n */\n\ndefine(\n[\n    'jquery',\n    'core/sortable_list',\n    'core/notification',\n    'core/custom_interaction_events',\n    'core/ajax',\n    'core/str',\n    'core/templates',\n    'theme_boost/popover'\n],\nfunction(\n    $,\n    Sortablewplist,\n    Notification,\n    CustomEvents,\n    Ajax,\n    Str,\n    Templates,\n    // eslint-disable-next-line no-unused-vars\n    Popover\n) {\n\n    var SELECTORS = {\n        SECTION_CONTAINER: '[data-region=\"section-container\"]',\n        SECTION: '[data-region=\"section\"]',\n        MODULES_CONTAINER: '[data-region=\"course-modules\"]',\n        MODULE: '[data-region=\"module\"]',\n        COMPLETIONCHECKS: '[data-region=\"completioncheck\"]',\n        EXPAND_TOGGLE: '[data-toggle=\"collapse\"]',\n        EXPAND_SECTIONS: '[data-action=\"expand\"]',\n        EXPAND_SECTIONS_OPEN: '[data-region=\"collapsed-open\"]',\n        EXPAND_SECTIONS_CLOSED: '[data-region=\"collapsed-closed\"]',\n        EXPAND_SECTIONS_CONTENT: '[data-region=\"sectioncollapse\"]',\n        COMPLETION_CONTAINER: '[data-actions=\"availability\"]',\n        COMPLETION_INFO: '[data-region=\"availabilityinfo\"]'\n\n    };\n\n    /**\n     * Move a course section.\n     *\n     * @param {Object} args Arguments to pass to webservice\n     *\n     * Valid args are:t\n     * int sectionnumber number of section to move\n     * int sectiontarget number of section to position after\n     * int courseid.     id of course this module belongs to\n     *\n     * @return {promise} Resolved with void or array of warnings\n     */\n    var moveSection = function(args) {\n        var request = {\n            methodname: 'format_wplist_move_section',\n            args: args\n        };\n        var promise = Ajax.call([request])[0];\n        promise.fail(Notification.exception);\n        return promise;\n    };\n\n    /**\n     * Move a course module.\n     *\n     * @param {Object} args Arguments to pass to webservice\n     *\n     * Valid args are:t\n     * int moduleid      id of module to move\n     * int moduletarget  id of module to position after\n     * int sectionnumber number of section to move module to\n     * int courseid.     id of course this section belongs to\n     *\n     * @return {promise} Resolved with void or array of warnings\n     */\n    var moveModule = function(args) {\n        var request = {\n            methodname: 'format_wplist_move_module',\n            args: args\n        };\n        var promise = Ajax.call([request])[0];\n        promise.fail(Notification.exception);\n        return promise;\n    };\n\n    /**\n     * Check the completion checkbox for self-completion.\n     *\n     * @param {Object} args Arguments to pass to webservice\n     *\n     * Valid args are:t\n     * int moduleid      id of module to complet\n     * int targetstate   set completion to on (1) or off (0)\n     *\n     * @return {promise} Resolved with void or array of warnings\n     */\n    var checkCompletion = function(args) {\n        var request = {\n            methodname: 'format_wplist_module_completion',\n            args: args\n        };\n        var promise = Ajax.call([request])[0];\n        promise.fail(Notification.exception);\n        return promise;\n    };\n\n    /**\n     * Update the section completion progress bar.\n     *\n     * @param {Object} root The course format root container element.\n     * @param {Number} sectionnumber Section ID.\n     * @param {Number} targetstate New state.\n     */\n    var updateSectionCompletion = function(root, sectionnumber, targetstate) {\n        var sectionprogress = root.find('#sectionprogress-' + sectionnumber);\n        var completedmodules = sectionprogress.attr('data-completed-modules');\n        var completionmodules = sectionprogress.attr('data-completion-modules');\n        if (targetstate === 1) {\n            completedmodules++;\n        } else {\n            completedmodules--;\n        }\n        var newCompletionPercentage = 100 * (completedmodules / completionmodules);\n        Str.get_string('section_completion', 'format_wplist', newCompletionPercentage).done(function(s) {\n            sectionprogress.attr('title', s);\n            sectionprogress.attr('data-completed-modules', completedmodules);\n            sectionprogress.css('width', newCompletionPercentage + '%');\n        });\n    };\n\n    /**\n     * Update the section collapse button.\n     * @param  {Object} root The course format root container element.\n     * @param  {Number} open Show state for all containers open.\n     * @param  {Bool} auto Check if containers open.\n     * @return {Bool} return early if auto and not all sections closed or open.\n     */\n    var updateSectionCollapse = function(root, open, auto) {\n        if (auto) {\n            if (root.find('.sectioncontent.collapse.show').length === 0) {\n                open = 1;\n            } else if (root.find('.sectioncontent.collapse:not(.show)').length === 0) {\n                open = 0;\n            } else {\n                // Return early since not all sections are open or closed.\n                return false;\n            }\n        }\n\n        var expand = root.find(SELECTORS.EXPAND_SECTIONS);\n        var openmsg = expand.find(SELECTORS.EXPAND_SECTIONS_OPEN);\n        var closedmsg = expand.find(SELECTORS.EXPAND_SECTIONS_CLOSED);\n        if (open === 0) {\n            openmsg.removeClass('hidden');\n            closedmsg.addClass('hidden');\n            expand.attr('data-expanded', 1);\n        } else {\n            openmsg.addClass('hidden');\n            closedmsg.removeClass('hidden');\n            expand.attr('data-expanded', 0);\n        }\n        return true;\n    };\n\n    /**\n     * Listen to, and handle events for the workplace list format.\n     *\n     * @param {Object} root The course format root container element.\n     * @param {Number} contextid Course context ID.\n     */\n    var registerEventListeners = function(root, contextid) {\n        CustomEvents.define(root, [\n            CustomEvents.events.activate\n        ]);\n\n        root.on(CustomEvents.events.activate, SELECTORS.EXPAND_SECTIONS, function(e) {\n            var open = parseInt($(e.target).closest(SELECTORS.EXPAND_SECTIONS).attr('data-expanded'));\n            if (open === 0) {\n                $(SELECTORS.EXPAND_SECTIONS_CONTENT).each(function() {\n                    $(this).addClass('show');\n                });\n                $(SELECTORS.EXPAND_TOGGLE).each(function() {\n                    $(this).removeClass('collapsed');\n                });\n                updateSectionCollapse(root, 0, false);\n                storeSectionPreference(root, 0, true, true, contextid);\n            } else {\n                $(SELECTORS.EXPAND_SECTIONS_CONTENT).each(function() {\n                    $(this).removeClass('show');\n                });\n                $(SELECTORS.EXPAND_TOGGLE).each(function() {\n                    $(this).addClass('collapsed');\n                });\n                updateSectionCollapse(root, 1, false);\n                storeSectionPreference(root, 0, true, false, contextid);\n            }\n        });\n\n        $(SELECTORS.EXPAND_SECTIONS_CONTENT).on('hidden.bs.collapse', function() {\n            var sectionid = $(this).data('sectionid');\n            var sectionnumber = $(this).data('sectionnumber');\n            var isaccordion = $(this).data('isaccordion');\n            var sectionname = $(this).data('sectionname');\n            updateSectionCollapse(root, 1, true);\n            Str.get_string('expandsection', 'format_wplist', sectionname).done(function(s) {\n                $('.course-section-toggle[data-target=\"#sectioncontent-' + sectionnumber + '\"]').attr('title', s);\n                storeSectionPreference(root, sectionid, isaccordion, false, contextid);\n            });\n        });\n\n        $(SELECTORS.EXPAND_SECTIONS_CONTENT).on('shown.bs.collapse', function() {\n            var sectionid = $(this).data('sectionid');\n            var sectionnumber = $(this).data('sectionnumber');\n            var isaccordion = $(this).data('isaccordion');\n            var sectionname = $(this).data('sectionname');\n            updateSectionCollapse(root, 0, true);\n            Str.get_string('collapsesection', 'format_wplist', sectionname).done(function(s) {\n                $('.course-section-toggle[data-target=\"#sectioncontent-' + sectionnumber + '\"]').attr('title', s);\n                storeSectionPreference(root, sectionid, isaccordion, true, contextid);\n            });\n        });\n\n        // Listen for changes on completion.\n        root.on(CustomEvents.events.activate, SELECTORS.COMPLETIONCHECKS, function(e) {\n            var cc = $(e.target).closest(SELECTORS.COMPLETIONCHECKS);\n            var moduleid = parseInt(cc.attr('data-module'));\n            var targetstate = parseInt(cc.attr('data-targetstate'));\n            var courseid = parseInt(cc.attr('data-courseid'));\n            var sectionnumber = parseInt(cc.attr('data-sectionnumber'));\n            var reloadOnChange = parseInt(cc.attr('data-reloadonchange'));\n\n            var args = {\n                moduleid: moduleid,\n                targetstate: targetstate,\n                courseid: courseid\n            };\n\n            checkCompletion(args).then(function(html) {\n                if (reloadOnChange) {\n                    window.location.reload();\n                }\n                updateSectionCompletion(root, sectionnumber, targetstate);\n                Templates.replaceNode(cc, html.completionicon, '');\n                return null;\n            })\n            .fail(Notification.exception);\n        });\n\n        // Variables for moving sections.\n        var sectionsContainer = root.find(SELECTORS.SECTION_CONTAINER);\n\n        var sections = root.find(SELECTORS.SECTION);\n\n        var courseid = sectionsContainer.attr('data-courseid');\n\n        var getSectionName = function(element) {\n            return element.find('h3.sectionname .inplaceeditable').text();\n        };\n        var getModuleName = function(element) {\n            return element.find('.cmname .inplaceeditable').text();\n        };\n        var findClosestSection = function(element) {\n            return element.closest('[data-region=\"section\"][data-sectionnumber]');\n        };\n\n        var sectionsSortable = new Sortablewplist(sectionsContainer, {moveHandlerSelector: '.movesection > [data-drag-type=move]'});\n        sectionsSortable.getElementName = function(element) {\n            return $.Deferred().resolve(getSectionName(element));\n        };\n\n        // Variables for moving modules.\n        var modulesContainers = root.find(SELECTORS.MODULES_CONTAINER);\n\n        var modulesSortable = new Sortablewplist(modulesContainers, {moveHandlerSelector: '.movemodule > [data-drag-type=move]'});\n        modulesSortable.getElementName = function(element) {\n            return $.Deferred().resolve(getModuleName(element));\n        };\n        modulesSortable.getDestinationName = function(parentElement, afterElement) {\n            if (!afterElement.length) {\n                return Str.get_string('totopofsection', 'moodle',\n                        getSectionName(findClosestSection(parentElement)));\n            } else {\n                // We check that is not the empty section message.\n                if ($(afterElement).find('.cmname').length === 0) {\n                    return null;\n                } else {\n                    return Str.get_string('movecontentafter', 'moodle', getModuleName(afterElement));\n                }\n            }\n        };\n\n        sections.on(Sortablewplist.EVENTS.DROP, function(e, info) {\n            e.stopPropagation();\n            var sectionnumber,\n                args;\n            if (info.positionChanged) {\n                if (info.element.attr('data-sectionnumber')) {\n                    if (info.targetNextElement && info.targetNextElement.attr('data-sectionnumber') === \"0\") {\n                        // Can not move before general section.\n                        sectionsSortable.moveElement(info.sourceList, info.sourceNextElement);\n                        return;\n                    }\n                    sectionnumber = info.element.attr('data-sectionnumber');\n                    var sectiontarget = info.targetNextElement.attr('data-sectionnumber');\n                    args = {\n                        sectionnumber: sectionnumber,\n                        sectiontarget: sectiontarget,\n                        courseid: courseid\n                    };\n                    moveSection(args).then(function() {\n                        info.element.attr('data-sectionnumber', sectiontarget);\n                        info.targetNextElement.attr('data-sectionnumber', sectionnumber);\n                        return null;\n                    }).catch(Notification.exception);\n                }\n                if (info.element.attr('data-module')) {\n                    var moduleid = info.element.attr('data-module');\n                    var moduletarget = info.targetNextElement.attr('data-module');\n                    sectionnumber = findClosestSection(info.targetList).attr('data-sectionnumber');\n                    args = {\n                        moduleid: moduleid,\n                        moduletarget: moduletarget,\n                        sectionnumber: sectionnumber,\n                        courseid: courseid\n                    };\n                    if (typeof moduleid !== 'undefined' && moduleid !== 0) {\n                        moveModule(args).catch(Notification.exception);\n                    }\n                }\n            }\n        });\n\n        // Count the number of modules in each Modules container.\n        var countmodules = function() {\n            root.find(SELECTORS.SECTION).each(function() {\n                var modulesContainer = $(this).find(SELECTORS.MODULES_CONTAINER);\n                var nummodules = modulesContainer.children().length - 1;\n\n                modulesContainer.attr('data-nummodules', nummodules);\n\n                if (nummodules === 0) {\n                    modulesContainer.addClass('nomodules');\n                } else {\n                    modulesContainer.removeClass('nomodules');\n                }\n            });\n        };\n\n        countmodules();\n\n        sections.on(Sortablewplist.EVENTS.DRAG, function(e, info) {\n            if (info.element.attr('data-module')) {\n                sections.each(function() {\n                    $(this).removeClass('movemodule');\n                });\n\n                var oldSectionModules = findClosestSection(info.sourceList).find(SELECTORS.MODULES_CONTAINER);\n                var numoldmodules = parseInt(oldSectionModules.attr('data-nummodules'));\n                if (numoldmodules === 1) {\n                    oldSectionModules.addClass('nomodules');\n                }\n\n                var newSection = findClosestSection(info.targetList);\n                newSection.addClass('movemodule');\n            }\n        });\n\n        sections.on(Sortablewplist.EVENTS.DRAGEND, function(e, info) {\n            if (info.element.attr('data-module')) {\n                countmodules();\n\n                var newSection = findClosestSection(info.element);\n                newSection.removeClass('movemodule');\n            }\n        });\n    };\n\n    /**\n     * Store the user display preference for this section\n     *\n     * @param {Object} root The course format root container element.\n     * @param {Number} sectionid Section ID.\n     * @param {Boolean} isaccordion\n     * @param {Boolean} opened = true or closed = false.\n     * @param {Number} contextid Course context ID.\n     */\n    var storeSectionPreference = function(root, sectionid, isaccordion, opened, contextid) {\n\n        var requestget = {\n            methodname: 'core_user_get_user_preferences',\n            args: {\n                name: 'format_wplist_opensections_' + contextid\n            }\n        };\n\n        var sections = [];\n\n        Ajax.call([requestget])[0]\n            .then(function(p) {\n                if (sectionid === 0 && opened) {\n                    sections = [];\n                    root.find('.sectioncontent.collapse').each(function() {\n                        var sectionid = $(this).data('sectionid');\n                        sections.push(sectionid);\n                    });\n                } else if (isaccordion) {\n                    if (opened) {\n                        sections = [sectionid];\n                    } else {\n                        sections = [];\n                    }\n                } else {\n                    if (p.preferences.length && p.preferences[0].value) {\n                        sections = JSON.parse(p.preferences[0].value);\n                    }\n                    var index = sections.indexOf(sectionid);\n                    if (opened) {\n                        if (index === -1) {\n                            sections.push(sectionid);\n                        }\n                    } else {\n                        if (index > -1) {\n                            sections.splice(index, 1);\n                        }\n                    }\n                }\n                var requestset = {\n                    methodname: 'core_user_update_user_preferences',\n                    args: {\n                        preferences: [{\n                            type: 'format_wplist_opensections_' + contextid,\n                            value: JSON.stringify(sections)\n                        }]\n                    }\n                };\n                return Ajax.call([requestset])[0];\n            })\n        .fail(Notification.exception);\n    };\n\n    /**\n     * Initialise all of the modules for the workplace list course format.\n     *\n     * @param {object} root The root element for the workplace list course format.\n     * @param {Number} contextid Course context ID.\n     */\n    var init = function(root, contextid) {\n        root = $(root);\n        registerEventListeners(root, contextid);\n\n        // Do not sanitize availability popovers. We need to print buttons inside it.\n        $('[data-region=\"availability-popover\"]').popover({\n            sanitize: false,\n        });\n    };\n\n    return {\n        init: init\n    };\n});\n"],"names":["define","$","Sortablewplist","Notification","CustomEvents","Ajax","Str","Templates","Popover","SELECTORS","updateSectionCollapse","root","open","auto","find","length","expand","openmsg","closedmsg","removeClass","addClass","attr","registerEventListeners","contextid","events","activate","on","e","parseInt","target","closest","each","this","storeSectionPreference","sectionid","data","sectionnumber","isaccordion","sectionname","get_string","done","s","cc","moduleid","targetstate","courseid","reloadOnChange","args","request","methodname","promise","call","fail","exception","checkCompletion","then","html","window","location","reload","sectionprogress","completedmodules","completionmodules","newCompletionPercentage","css","updateSectionCompletion","replaceNode","completionicon","sectionsContainer","sections","getSectionName","element","text","getModuleName","findClosestSection","sectionsSortable","moveHandlerSelector","getElementName","Deferred","resolve","modulesContainers","modulesSortable","getDestinationName","parentElement","afterElement","EVENTS","DROP","info","stopPropagation","positionChanged","targetNextElement","moveElement","sourceList","sourceNextElement","sectiontarget","moveSection","catch","moduletarget","targetList","moveModule","countmodules","modulesContainer","nummodules","children","DRAG","oldSectionModules","DRAGEND","opened","requestget","name","p","push","preferences","value","JSON","parse","index","indexOf","splice","requestset","type","stringify","init","popover","sanitize"],"mappings":"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"}